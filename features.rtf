{\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red255\green192\blue0;\red0\green176\blue80;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 Martyk\par
 [pokeemerald] Day/Night encounters\par
\par
I'm happy I can finally contribute to this page. Major thanks to AmbientDinosaur who helped me on my way, link to that post is at the end.\par
 Setting up the different encounters\par
First things first, we need to add a new encounter group, this can easily be done with porymap.\par
Spoiler: \par
I Dont have permission to post pictures so I will try to talk you through it.\par
In porymap, go to the map you want to add different encounters to and go to the Wild Pokemon tab. Then add a new group by clicking on the + button and a new window should pop up. Here you can choose which kind of encounters you would like to add. after choosing this, you can decide which pokemon and what level they are... the usual stuff. however, dont forget to adjust the encounter rate since it automatically goes to 0 when you add a new group.\par
Then, in \cf1 src\\wild_encounter.c  \cf0 search for\par
u16 GetCurrentMapWildMonHeaderId(void)\par
Modify this function so it looks like this (I used route101 as an example):\par
u16 GetCurrentMapWildMonHeaderId(void)\par
\{\par
    u16 i;\par
\par
    for (i = 0; ; i++)\par
    \{\par
        const struct WildPokemonHeader *wildHeader = &gWildMonHeaders[i];\par
        if (wildHeader->mapGroup == MAP_GROUP(UNDEFINED))\par
            break;\par
\par
        if (gWildMonHeaders[i].mapGroup == gSaveBlock1Ptr->location.mapGroup &&\par
            gWildMonHeaders[i].mapNum == gSaveBlock1Ptr->location.mapNum)\par
        \{\par
\tab\tab\tab\cf2 if (gSaveBlock1Ptr->location.mapGroup == MAP_GROUP(ROUTE101) &&\par
                gSaveBlock1Ptr->location.mapNum == MAP_NUM(ROUTE101))\par
                i += VarGet(VAR_DAYNIGHT);\par
\cf0\par
            if (gSaveBlock1Ptr->location.mapGroup == MAP_GROUP(ALTERING_CAVE) &&\par
                gSaveBlock1Ptr->location.mapNum == MAP_NUM(ALTERING_CAVE))\par
            \{\par
                u16 alteringCaveId = VarGet(VAR_ALTERING_CAVE_WILD_SET);\par
                if (alteringCaveId > 8)\par
                    alteringCaveId = 0;\par
\par
                i += alteringCaveId;\par
            \}\par
\par
            return i;\par
        \}\par
    \}\par
\par
    return -1;\par
\}\par
The green part is the added part. note that where it says Route101, you would have to change it to the map that you are currently adding night encounters to.\par
also note that you will have to add a new if statement for every map that you will add night encounters for.\par
\par
finally we will have to write the script that says whether you will encounter day or night pokemon. To me it seems most logical to do this in the map scripts of the maps you would like to add the encounters in. I think either\par
MAP_SCRIPT_ON_TRANSITION\par
and\par
MAP_SCRIPT_ON_RESUME\par
are the best to use but you can decide for yourself. in include\\constants\\map_scripts.h you can find a good description on what all the different map scripts do.\par
Keeping with the Route101 example, This is the original Map_script for route101:\par
Spoiler: \par
\par
Route101_MapScripts::\par
\tab map_script MAP_SCRIPT_ON_TRANSITION, Route101_OnTransition\par
\tab map_script MAP_SCRIPT_ON_FRAME_TABLE, Route101_OnFrame\par
\tab .byte 0\par
\par
Route101_OnTransition:\par
\tab call ProfBirch_EventScript_UpdateLocation\par
\tab end\par
\par
Route101_OnFrame:\par
\tab map_script_2 VAR_ROUTE101_STATE, 0, Route101_EventScript_HideMapNamePopup\par
\tab .2byte 0\par
\par
we will change it to:\par
Spoiler: \par
\par
Route101_MapScripts::\par
\tab map_script MAP_SCRIPT_ON_TRANSITION, Route101_OnTransition\par
\tab map_script MAP_SCRIPT_ON_RESUME, Route101_OnResume\par
\tab map_script MAP_SCRIPT_ON_FRAME_TABLE, Route101_OnFrame\par
\tab .byte 0\par
\par
Route101_OnTransition:\par
\tab special GetDayOrNight\par
\tab goto_if_eq VAR_RESULT, 1, Route101_OnTransition_Night\par
\tab goto_if_eq VAR_RESULT, 0, Route101_OnTransition_Day\par
\tab end\par
\tab\par
Route101_OnTransition_Night:\par
\tab setvar VAR_DAYNIGHT, 1\par
\tab call ProfBirch_EventScript_UpdateLocation\par
\tab end\par
\par
Route101_OnTransition_Day:\par
\tab setvar VAR_DAYNIGHT, 0\par
\tab call ProfBirch_EventScript_UpdateLocation\par
\tab end\par
\tab\par
Route101_OnResume:\par
\tab special GetDayOrNight\par
\tab goto_if_eq VAR_RESULT, 1, Route101_OnResume_Night\par
\tab goto_if_eq VAR_RESULT, 0, Route101_OnResume_Day\par
\tab end\par
\tab\par
Route101_OnResume_Night:\par
\tab setvar VAR_DAYNIGHT, 1\par
\tab end\par
\tab\par
Route101_OnResume_Day:\par
\tab setvar VAR_DAYNIGHT, 0\par
\tab end\par
\par
Route101_OnFrame:\par
\tab map_script_2 VAR_ROUTE101_STATE, 0, Route101_EventScript_HideMapNamePopup\par
\tab .2byte 0\par
\par
\par
And there you have it, day and night encounters.\par
\par
Thanks again to AmbientDinosaur! Here is the OP {{\field{\*\fldinst{HYPERLINK https://www.pokecommunity.com/showpost.php?p=10315616&postcount=236 }}{\fldrslt{https://www.pokecommunity.com/showpost.php?p=10315616&postcount=236\ul0\cf0}}}}\f0\fs22\par
follow me:\par
Setup\par
Pull from my branch (see spoiler for more detail)\par
Spoiler: \par
to add my repo as a remote: git remote add ghoulslash {{\field{\*\fldinst{HYPERLINK https://github.com/ghoulslash/pokeemerald }}{\fldrslt{https://github.com/ghoulslash/pokeemerald\ul0\cf0}}}}\f0\fs22\par
to view your remotes: git remote -v\par
to pull from this branch: git pull ghoulslash follow_me\par
fix merge conflicts:\par
<<<<<<<\par
Changes on your working version (the branch that is being merged into)\par
=======\par
Changes from the branch you are pulling from (being merged in) - typically what you want to keep\par
>>>>>>>\par
Update gFollowerAlternateSprites with graphics Ids for your followers. The general structure is:\par
normalId - the graphics Id of the regular NPC (just standing or walking around or whatever)\par
machBikeId - the mach bike sprites (if applicable - see Step 4)\par
acroBikeId - the acro bike sprites (if applicable - see Step 4)\par
surfId - surfing sprites graphics Id (if applicable - see Step 4)\par
underwaterId - diving sprites graphics Id (if applicable - see Step 4)\par
Example - May sprite in the GIFs:\par
Spoiler: \par
\{\par
.normalId = OBJ_EVENT_GFX_RIVAL_MAY_NORMAL,\par
.machBikeId = OBJ_EVENT_GFX_RIVAL_MAY_MACH_BIKE,\par
.acroBikeId = OBJ_EVENT_GFX_RIVAL_MAY_ACRO_BIKE,\par
.surfId = OBJ_EVENT_GFX_RIVAL_MAY_SURFING,\par
.underwaterId = OBJ_EVENT_GFX_MAY_UNDERWATER,\par
\},\par
If you have sideways stairs implemented, set SIDEWAYS_STAIRS_IMPLEMENTED to TRUE in include/constants/global.h\par
Four new scripting commands are added: (see asm/macros/event.inc for more info)\par
setfollower - sets up an NPC to follow you. Takes a byte argument for the NPCs local Id and 2 bytes for the follower flags (see step 4)\par
destroyfollower - stop the NPC from following you.\par
facefollower - player and follower face one another\par
checkfollower - checks if you have a follower, returns the result to VAR_RESULT\par
Follower Flags: (see include/constants/follow_me.h)\par
FOLLOWER_FLAG_HAS_RUNNING_FRAMES - follower has specific frames used when running. Otherwise they will walk fast behind you when you run.\par
FOLLOWER_FLAG_CAN_BIKE - follower has mach/acro biking frames in gFollowerAlternateSprites. If not set, you cannot bike.\par
FOLLOWER_FLAG_CAN_LEAVE_ROUTE - you can use teleport / dig / fly / etc. The follower will follow you when you use these field moves. The follower can travel between routes even if not set.\par
FOLLOWER_FLAG_CAN_SURF - the follower has surfing graphics defined in gFollowerAlternateSprites. Otherwise, you cannot Surf.\par
FOLLOWER_FLAG_CAN_WATERFALL - the follower can follow you up waterfalls. Otherwise, you cannot use Waterfall.\par
FOLLOWER_FLAG_CAN_DIVE - the follower has a diving graphics Id defined in gFollowerAlternateSprites. It will follow you underwater. Otherwise you cannot use Dive.\par
FOLLOWER_FLAG_CAN_ROCK_CLIMB - unused (no rock climb in the base game), but similar to the previous field move defines.\par
FOLLOWER_FLAG_CLEAR_ON_WHITE_OUT - remove the follower if the player whites out.\par
FOLLOWER_FLAG_CUSTOM_FOLLOW_SCRIPT - a unique script is run when you talk to the follower whilst they are following you. Requires loading the script (via loadword) prior to the command setfollower).\par
\par
For example, here's an example for adding a follower with a new script:\par
SetFollower::\par
    lock\par
    faceplayer\par
    loadword 0 NewScript\par
    setfollower 1 0x100   @ cause NPC (local ID = 1) to follow you with a custom following script\par
    release\par
    end\par
\par
NewScript:\par
    msgbox FollowYou MSGBOX_SIGN\par
    end\par
FollowYou:\par
    .string "I'll keep following you!$"\par
\par
\par
Finally, you can also use the followers in scripts using the local Id, OBJ_EVENT_ID_FOLLOWER like so:\par
EventScript_Test::\par
    lock\par
    turnobject OBJ_EVENT_ID_FOLLOWER, DIR_NORTH\par
    @ etc\par
Known Issues:\par
If you take a follower into a map with the maximum number of event objects, your follower may inherit a different palette and/or get directionally confused. Fortunately, since we are using decomps, we can easily increase the value of OBJECT_EVENTS_COUNT. This doesn't resolve the 16 palette gba limit, though.\par
Sometimes the follower's surf blob won't appear until a menu is entered/exited\par
\par
Credits:\par
Skeli / Complete Fire Red Upgrade\par
Touched for original source\par
\par
//Mugshots Information:\par
\par
\par
//Your mugshot images need to be 16-color indexed PNGs. Their width and height must be multiples of 8.\par
\par
//(OPTIONAL). Make a new folder called "mugshots" in the graphics folder for your images, you could also just place them in some other folder. (EDIT: I ALREADY DID THIS)\par
\par
//1. Add a constant for each image in include/constants/mugshots.h, each with a number one higher than the last:\par
//#ifndef GUARD_CONSTANTS_MUGSHOT_H\par
//#define GUARD_CONSTANTS_MUGSHOT_H\par
\par
//Add your mugshot constants here\par
//#define MUGSHOT_BLAINE 0\par
//#define MUGSHOT_MAZE 1\par
\par
//#endif\par
\par
//2. Load the image's tiles and palette in src/mugshot.c, above the definition of sMugshots\par
//static const u32 sMugshotImg_Blaine[] = INCBIN_U32("graphics/mugshots/blaine.4bpp.lz");\par
//static const u16 sMugshotPal_Blaine[] = INCBIN_U16("graphics/mugshots/blaine.gbapal");\par
\par
//static const u32 sMugshotImg_Maze[] = INCBIN_U32("graphics/mugshots/maze.4bpp.lz");\par
//static const u16 sMugshotPal_Maze[] = INCBIN_U16("graphics/mugshots/maze.gbapal");\par
//The path in the incbin is the path to your image except "png" is replaced with "4bpp.lz" for the tiles and "gbapal" for the palette.\par
\par
\par
//3. Create mugshot templates in sMugshots in src/mugshot.c using the images and palettes from the last step and the constants from the first step\par
//static const struct Mugshot sMugshots[] = \{\par
    //ADD YOUR MUGSHOTS HERE\par
    //[MUGSHOT_BLAINE] = \{.x = 16, .y = 5, .width = 80, .height = 72, .image = sMugshotImg_Blaine, .palette = sMugshotPal_Blaine\},\par
    //[MUGSHOT_MAZE] = \{.x = 6, .y = 1, .width = 144, .height = 96, .image = sMugshotImg_Maze, .palette = sMugshotPal_Maze\},\par
//\};\par
//Note that x & y are tile coordinates, so the mugshot will be drawn at (8*x, 8*y).\par
\par
\par
//3. Using mugshots in a script\par
\par
//There are 3 new functions, which you can call with the callnative command:\par
//DrawMugshot: draws mugshot that's id is in VAR_0x8000\par
//DrawMugshotAtPos: draws mugshot that's id is in VAR_0x8000, at coordinates stored in VAR_0x8001 and VAR_0x8002\par
//ClearMugshot: clears drawn mugshot\par
\par
//If a mugshot is drawn while one is already on the screen, the previous one is automatically cleared.\par
\par
//Example script:\par
//setvar VAR_0x8000, MUGSHOT_BLAINE\par
//callnative DrawMugshot\par
//msgbox SomeText, MSGBOX_NPC\par
//callnative ClearMugshot\par
//end\par
\par
//SomeText:\par
//.string "hi.$"\par
}
 